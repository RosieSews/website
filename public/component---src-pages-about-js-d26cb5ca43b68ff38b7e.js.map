{"version":3,"sources":["webpack:///./src/pages/about.js"],"names":["IndexPage","props","title","config","siteTitle","to","style","display","textAlign","margin","big","width","height","viewBox","xmlns","d"],"mappings":"oXAoHeA,UAnCG,SAAAC,GAAK,OACrB,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQC,MAAK,cAAgBC,IAAOC,YACpC,yBAKE,kBAAC,IAAD,OAEF,kBAAC,IAAD,KACE,kBAAC,IAAD,iBACA,gDACA,kBAAC,OAAD,CACEC,GAAG,oBACHC,MAAO,CAAEC,QAAS,QAASC,UAAW,SAAUC,OAAQ,QAExD,kBAAC,IAAD,CAAQC,KAAG,GACT,yBACEC,MAAM,OACNC,OAAO,OACPC,QAAQ,gBACRC,MAAM,8BAEN,0BAAMC,EAAE,4NAPZ","file":"component---src-pages-about-js-d26cb5ca43b68ff38b7e.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Helmet from \"react-helmet\";\nimport { Link, graphql } from \"gatsby\";\nimport styled, { css } from \"styled-components\";\nimport Img from \"gatsby-image\";\nimport logoImg from \"../images/logo-icon.png\";\nimport { LogoImg } from \"../components/Logo\";\nimport FancyHeader from \"../components/FancyHeader\";\n\nimport {\n  Layout,\n  Article,\n  Wrapper,\n  Button,\n  SectionTitle,\n  Header,\n  Content,\n  Hero\n} from \"../components\";\nimport {\n  StyledH3,\n  SecondaryH2,\n  SecondaryH1\n} from \"../components/StyledElements\";\nimport config from \"../../config\";\n\n// const Content = styled.div`\n//   grid-column: 2;\n//   ${\"\" /* box-shadow: 0 4px 120px rgba(0, 0, 0, 0.1); */}\n//   border-radius: 1rem;\n//   padding: 3rem 6rem;\n//   @media (max-width: ${props => props.theme.breakpoints.tablet}) {\n//     padding: 3rem 2rem;\n//   }\n//   @media (max-width: ${props => props.theme.breakpoints.phone}) {\n//     padding: 2rem 1.5rem;\n//   }\n//   overflow: hidden;\n// `;\n\n// const Hero = styled.div`\n//   grid-column: 2;\n//   padding: 3rem 2rem 6rem 2rem;\n//   text-shadow: 0 12px 30px rgba(0, 0, 0, 0.15);\n//   color: ${props => props.theme.colors.grey.dark};\n\n//   @media (max-width: ${props => props.theme.breakpoints.phone}) {\n//     padding: 2rem 1rem 4rem 1rem;\n//   }\n\n//   p {\n//     font-size: 1.68rem;\n//     margin-top: -1rem;\n//     @media (max-width: ${props => props.theme.breakpoints.tablet}) {\n//       font-size: 1.45rem;\n//     }\n//     @media (max-width: ${props => props.theme.breakpoints.phone}) {\n//       font-size: 1.25rem;\n//     }\n//   }\n// `;\n\n// <Layout>\n//   <Wrapper>\n//     <Helmet title={`Categories | ${config.siteTitle}`} />\n//     <Header>\n//       <Link to=\"/\">{config.siteTitle}</Link>\n//     </Header>\n//     <Content>\n//       <SectionTitle>Categories</SectionTitle>\n//       {group.map(category => (\n//         <Title key={category.fieldValue}>\n//           <Link to={`/categories/${kebabCase(category.fieldValue)}`}>{category.fieldValue}</Link> (\n//           {category.totalCount})\n//         </Title>\n//       ))}\n//     </Content>\n//   </Wrapper>\n// </Layout>\n\nconst IndexPage = props => (\n  <Layout>\n    <Wrapper>\n      <Helmet title={`About Us | ${config.siteTitle}`} />\n      <div\n        css={css`\n          grid-area: header;\n        `}\n      >\n        <FancyHeader />\n      </div>\n      <Content>\n        <SecondaryH1>About Us</SecondaryH1>\n        <p>more info soon...</p>\n        <Link\n          to=\"/request-supplies\"\n          style={{ display: \"block\", textAlign: \"center\", margin: \"1em\" }}\n        >\n          <Button big>\n            <svg\n              width=\"1792\"\n              height=\"1792\"\n              viewBox=\"0 0 1792 1792\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n            >\n              <path d=\"M1764 11q33 24 27 64l-256 1536q-5 29-32 45-14 8-31 8-11 0-24-5l-453-185-242 295q-18 23-49 23-13 0-22-4-19-7-30.5-23.5t-11.5-36.5v-349l864-1059-1069 925-395-162q-37-14-40-55-2-40 32-59l1664-960q15-9 32-9 20 0 36 11z\" />\n            </svg>\n            REQUEST SUPPLIES\n          </Button>\n        </Link>\n      </Content>\n    </Wrapper>\n  </Layout>\n);\n\nexport default IndexPage;\n\n// IndexPage.propTypes = {\n//   data: PropTypes.shape({\n//     allMdx: PropTypes.shape({\n//       nodes: PropTypes.array.isRequired\n//     })\n//   }).isRequired\n// };\n\n// export const IndexQuery = graphql`\n//   query IndexQuery {\n//     allMdx(sort: { fields: [frontmatter___date], order: DESC }) {\n//       nodes {\n//         excerpt(pruneLength: 200)\n//         timeToRead\n//         fields {\n//           slug\n//         }\n//         frontmatter {\n//           title\n//           date(formatString: \"MM/DD/YYYY\")\n//           categories\n//           primaryColor\n//           banner {\n//             ...bannerImage640\n//           }\n//         }\n//       }\n//     }\n//   }\n// `;\n"],"sourceRoot":""}